####################################################################
# Author:       Ragdata
# Date:         12/02/2025
# License:      MIT License
# Copyright:    Copyright Â© 2025 Redeyed Technologies
####################################################################
# TRAEFIK
####################################################################

## NETWORKS #######################################################
networks:

    public:
        name: public
        driver: overlay
        attachable: true
        ipam:
            config:
                - subnet: 172.10.0.0/24
                - gateway: 172.10.0.1

    private:
        name: private
        driver: overlay
        attachable: true
        ipam:
            config:
                - subnet: 172.10.10.0/24
                - gateway: 172.10.10.1

## SECRETS #########################################################
secrets:

    basic_auth_credentials:
        file: /mnt/vol/secrets/basic_auth_credentials

    CF_DNS_API_TOKEN:
        file: /mnt/vol/secrets/CF_DNS_API_TOKEN

## SERVICES ########################################################
services:
    traefik:
        image: traefik:v3.3
        networks:
            public:
                ipv4_address: 172.10.0.254
        environment:
            - CF_DNS_API_TOKEN_FILE=/run/secrets/CF_DNS_API_TOKEN
            - HTPASSWD_FILE=/run/secrets/basic_auth_credentials
        secrets:
            - CF_DNS_API_TOKEN
            - basic_auth_credentials
        ports:
            - target: 80        # http
              published: 80
              protocol: tcp
              mode: host
            - target: 443       # https
              published: 443
              protocol: tcp
              mode: host
            # - target: 8080      # dashboard
            #   published: 8080
            #   protocol: tcp
            #   mode: host
            - target: 8081        # ping
              published: 8081
              protocol: tcp
              mode: host
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
            - /mnt/vol/docker/traefik/cert:/mnt/cert
            - /mnt/vol/docker/traefik/conf:/mnt/conf
            - /mnt/vol/docker/traefik/logs:/mnt/logs
        command:

            global.checknewversion: true
            global.sendsnonymoususage: true

            api: true
            api.dashboard: true
            # api.insecure: true
            api.debug: false
            ping: true

            log: true
            log.filepath: /mnt/vol/docker/traefik/logs/traefik.log
            log.level: INFO

            accesslog: true
            accesslog.filepath: /mnt/vol/docker/traefik/logs/access.log
            accesslog.bufferingsize: 100
            accesslog.filters.statusCodes: 204-299,400-499,500-599

            entrypoints.web.address: ":80"
            entrypoints.web.http.redirections.entrypoint.to: ssl
            entrypoints.web.http.redirections.entrypoint.scheme: https
            entrypoints.web.http.redirections.entrypoint.permanent: true
            entrypoints.web.http.redirections.entrypoint.middlewares: https-redirect@file

            entrypoints.ssl.address: ":443"
            entrypoints.ssl.http.tls: true
            entrypoints.ssl.http.tls.options: tls-opts@file

            entrypoints.ssl.http.tls.certresolver: dns-cloudflare
            entrypoints.ssl.http.tls.domains[0].main: aever.au
            entrypoints.ssl.http.tls.domains[0].sans: *.aever.au

            # serversTransport.insecureSkipVerify: true

            # allow the following IPs to set X-Forwarded headers
            # entrypoints.ssl.forwardedHeaders.trustedIPs: 173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22,127.0.0.1/32,10.0.0.1/24,172.30.212.58/20,192.168.0.1/24

            providers.file.directory: /mnt/vol/docker/traefik/conf
            providers.file.watch: true

            providers.docker: true
            providers.swarm.endpoint: "unix:///var/run/docker.sock"
            providers.swarm.exposedByDefault: false
            providers.swarm.network: public
            providers.swarm.defaultRule: "Host(`{{ .Name }}.{{ index .Labels \"customLabel\" }}`)"
            providers.swarm.constraints: "Label(`traefik.constraint-label`, `traefik-certs`)"
            providers.swarm.refreshSeconds: 30
            providers.swarm.httpClientTimeout: 300
            providers.swarm.allowEmptyServices: true
            providers.swarm.watch: true

            certificatesresolvers.le.acme.email: ragdata@ragdata.dev
            certificatesresolvers.le.acme.storage: /mnt/vol/docker/traefik/certs/acme.json
            certificatesresolvers.le.acme.caServer: https://acme-staging-v02.api.letsencrypt.org/directory
            certificatesresolvers.le.acme.dnschallenge: true
            certificatesresolvers.le.acme.dnschallenge.provider: cloudflare
            certificatesresolvers.le.acme.dnschallenge.resolvers: 1.1.1.1:53,1.0.0.1:53
            certificatesresolvers.le.acme.dnschallenge.delayBeforeCheck: 10
            certificatesresolvers.le.acme.dnschallenge.entrypoint: web

        # healthcheck:
        #     test: ["CMD","traefik","healthcheck","--ping"]
        #     interval: 5s
        #     retries: 3

        labels:

            autoheal: true
            traefik.enabled: true

            # traefik.http.routers.traefik-ui.entrypoints: web
            # traefik.http.routers.traefik-ui.rule: Host(`aever.au`)

            traefik.http.routers.dashboard.tls: true
            traefik.http.routers.dashboard.entrypoints: ssl
            traefik.http.routers.dashboard.rule: Host(`traefik.aever.au`) && ( PathPrefix(`/api`) || Path(`/dashboard/`) )
            traefik.http.routers.dashboard.service: api@internal

            traefik.http.routers.ping.rule: Host(`traefik.aever.au`) && Path(`/ping`)
            traefik.http.routers.ping.tls: true
            traefik.http.routers.ping.service: ping@internal

            traefik.http.routers.basic-auth.middlewares: chain-basic-auth@file
